# File: .github/workflows/deploy.yml
name: 🚀 Build & Deploy All Clients

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  pages:
    runs-on: ubuntu-latest
    steps:
      # 1) Checkout code
      - uses: actions/checkout@v4

      # 2) Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      # 3) Build each client demo (skip landingpage)
      - name: Build demos
        run: |
          set -e
          for dir in project/*/; do
            slug=$(basename "$dir")
            if [ "$slug" = "landingpage" ]; then
              continue
            fi

            echo "🔨 Considering demo: $slug"

            # Must have package.json
            if [ ! -f "$dir/package.json" ]; then
              echo "➡️  Skipping $slug (no package.json)"
              continue
            fi

            echo "🔧 Installing deps for: $slug"
            cd "$dir"
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install --no-audit --no-fund
            fi

            echo "🏗  Building: $slug"
            # Try project's build script; if missing/fails, fall back to vite build
            if npm run -s build; then
              echo "✅ Built with npm run build"
            else
              echo "ℹ️  Falling back to npx vite build for $slug"
              npx vite build
            fi

            cd ../../

            # Copy dist into its own folder if present
            if [ -d "project/$slug/dist" ]; then
              rm -rf "$slug"
              mkdir -p "$slug"
              cp -r "project/$slug/dist/." "$slug/"
            else
              echo "⚠️  $slug built but no dist/ found — skipping copy"
            fi
          done

      # 4) Build & copy landing page into root
      - name: Build landing page
        run: |
          cd project/landingpage
          npm ci
          npm run build
          cd ../../
          cp -r project/landingpage/dist/* .

      # 5) Dynamic SPA fallback for ALL paths
      - name: Create smart 404.html
        run: |
          cat > 404.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head><meta charset="utf-8"><title>Redirecting…</title></head>
          <body>
            <script>
              // Split path segments
              const parts = location.pathname.split('/').filter(Boolean)
              if (parts.length > 0) {
                // first segment is the demo slug
                const slug = parts[0]
                // rest after slug
                const rest = parts.slice(1).join('/')
                // build target URL: /<slug>/index.html#/<rest>
                const hash = rest ? '#/' + rest : ''
                window.location.replace(`/${slug}/index.html${hash}`)
              } else {
                // no slug → root landing page
                window.location.replace('/index.html')
              }
            </script>
            <p>Redirecting…</p>
          </body>
          </html>
          EOF

      # 6) Debug: list everything that will be published
      - name: Show publish directory
        run: |
          echo "=== publish contents ==="
          ls -R .
          echo "========================"

      # 7) Deploy to GitHub Pages (gh-pages branch)
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./
